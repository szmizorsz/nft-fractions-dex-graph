type Account @entity {
    id: ID! # address
    balances: [Balance!]! @derivedFrom(field: "account")
    ethBalance: BigInt
    ethReservedBalance: BigInt
    shareReservedBalances: [ShareReservedBalance!]! @derivedFrom(field: "account")
}

type Token @entity {
    id: ID!
    identifier: BigInt!
    totalSupply: BigInt
    erc721ContractAddress: Bytes
    erc721TokenId: BigInt
    tokenURI: String
    deposited: Boolean
    balances: [Balance!]! @derivedFrom(field: "token")
    orders: [Order!] @derivedFrom(field: "token")
    trades: [Trade!] @derivedFrom(field: "token")
}

type Balance @entity {
    id: ID!
    token: Token!
    account: Account!
    value: BigInt!
}

type ShareReservedBalance @entity {
    id: ID!
    token: Token!
    account: Account!
    value: BigInt!
}

enum OrderSide {
  Buy
  Sell
}

type Order @entity {
    id: ID!
    token: Token!
    account: Account!
    side: OrderSide
    price: BigInt!
    amount: BigInt!
    filled: BigInt
    timestamp: BigInt
    removed: Boolean
    fullyExecuted: Boolean
}

type Trade @entity {
    id: ID!
    order: Order!
    token: Token!
    trader1: Account!
    trader2: Account!
    price: BigInt!
    amount: BigInt!
    date: BigInt
}